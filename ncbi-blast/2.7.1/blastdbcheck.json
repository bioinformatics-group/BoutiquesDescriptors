{
    "name": "blastdbcheck",
    "tool-version": "v2.7.1",
    "author": "Altschul et al.",
    "command-line": "init_genpipes -a /cvmfs-cache/cvmfs/shared/ -c /etc/parrot/ /cvmfs/soft.mugqic/CentOS6/software/blast/ncbi-blast-2.7.1+/bin/blastdbcheck [DB] [DBTYPE] [DIR] [RECURSIVE] [VERBOSITY] [FULL] [STRIDE] [RANDOM] [ENDS] [NO_ISAM] [LEGACY] [MUST_HAVE_TAXIDS] [CDD_DELTA]",
    "container-image": {
        "type": "docker",
        "image": "c3genomics/genpipes",
        "container-opts": [
            "--privileged",
            "-v /tmp:/tmp",
            "--network host -it",
            "-w $PWD",
            "-v $HOME:$HOME",
            "--user $UID:$GROUPS",
            "-v /etc/group:/etc/group",
            "-v /etc/passwd:/etc/passwd"
        ]
    },
    "description": "BLAST database integrity and validity checking application",
    "inputs": [
        {
            "command-line-flag": "-dbtype",
            "description": "Molecule type of target db",
            "id": "dbtype",
            "name": "Database Type",
            "optional": false,
            "type": "String",
            "default-value": "guess",
            "value-choices": [
                "nucl",
                "prot",
                "guess"
            ],
            "value-key": "[DBTYPE]"
        },
        {
            "command-line-flag": "-db",
            "description": "Specify a database name",
            "id": "db",
            "name": "Database Name",
            "optional": true,
            "type": "String",
            "value-key": "[DB]"
        },
        {
            "command-line-flag": "-dir",
            "description": "Specify a directory containing one or more databases.",
            "id": "dir",
            "name": "Database Directory",
            "optional": true,
            "type": "String",
            "disables-inputs": ["db"],
            "value-key": "[DIR]"
        },
        {
            "command-line-flag": "-recursive",
            "description": "Specify true to recurse through all dbs in directory tree.",
            "id": "recursive",
            "name": "Blast Archive File",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "requires-inputs": ["dir"],
            "value-key": "[RECURSIVE]"
        },
        {
            "command-line-flag": "-verbosity",
            "description": "Verbiosity of results.\n   0=Quiet, 1=Brief, 2=Summary, 3=Detailed, 4=Minutia",
            "id": "verbosity",
            "name": "Verbosity",
            "optional": true,
            "type": "Number",
            "default-value": 2,
            "minimum": 0,
            "maximum": 4,
            "value-key": "[VERBOSITY]"
        },
        {
            "command-line-flag": "-full",
            "description": "If true, test every sequence (warning: may be slow).",
            "id": "full",
            "name": "Full Test",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "disables-inputs": ["stride", "random", "ends"],
            "value-key": "[FULL]"
        },
        {
            "command-line-flag": "-stride",
            "description": "Check integrity of every Nth sequence.",
            "id": "stride",
            "name": "Stride Sequence Integrity Test",
            "minimum": 1,
            "type": "Number",
            "value-key": "[STRIDE]"
        },
        {
            "command-line-flag": "-random",
            "description": "Check this many randomly selected sequences.",
            "id": "random",
            "name": "Random Sequence Test",
            "minimum": 1,
            "type": "Number",
            "value-key": "[RANDOM]"
        },
        {
            "command-line-flag": "-ends",
            "description": "Check this many sequences at each end of the database.",
            "id": "ends",
            "name": "Database End Integrity Test",
            "minimum": 1,
            "type": "Number",
            "value-key": "[ENDS]"
        },
        {
            "command-line-flag": "-no_isam",
            "description": "Disable ISAM testing.",
            "id": "no_isam",
            "name": "NO ISAM Testing",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "value-key": "[NO_ISAM]"
        },
        {
            "command-line-flag": "-legacy",
            "description": "Enable check for existence of temporary files.",
            "id": "legacy",
            "name": "Legacy temp file existence check",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "value-key": "[LEGACY]"
        },
        {
            "command-line-flag": "-must_have_taxids",
            "description": "Require that all sequences in the database have taxid set.",
            "id": "must_have_taxids",
            "name": "Must Have taxid set",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "value-key": "[MUST_HAVE_TAXIDS]"
        },
        {
            "command-line-flag": "-cdd_delta",
            "description": "Do aditional tests for a CDD database for DELTA-BLAST",
            "id": "cdd_delta",
            "name": "Do CDD database tests for DELTA-BLAST",
            "optional": true,
            "type": "Flag",
            "default-value": "true",
            "value-key": "[CDD_DELTA]"
        }
    ],
    "schema-version": "0.1",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {}
}